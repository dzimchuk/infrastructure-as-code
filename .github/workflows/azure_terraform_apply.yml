name: terraform apply

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment name (used to pick up a proper .tfvars file), e.g. dev, prod'
        required: true
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VAR_state_resource_group_name: ${{ secrets.STATE_RESOURCE_GROUP_NAME }}
      TF_VAR_state_storage_account_name: ${{ secrets.STATE_STORAGE_ACCOUNT_NAME }}
      TF_VAR_state_container_name: ${{ secrets.STATE_CONTAINER_NAME }}

    defaults:
      run:
        shell: bash
        working-directory: ./azure/terraform

    steps:
      - uses: actions/checkout@v2

      - name: Set .tfvars
        run: echo "TFVARS_FILE=env_${{ inputs.env }}.tfvars" >> $GITHUB_ENV
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="${{ env.TFVARS_FILE }}" -no-color
        continue-on-error: false

      - name: Terraform Apply
        run: terraform apply -var-file="${{ env.TFVARS_FILE }}" -auto-approve -input=false
